name: Deploy

on:
    workflow_dispatch:
    push:
      branches:
        - master

jobs:
  release:
    name: Release to production
    runs-on: ubuntu-latest
    #environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'DEV' }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
            set-safe-directory: false

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer dependencies
        run: composer install

      - name: Generate .env
        run: |
            touch .env
            echo "APP_NAME=\"SendPortal\"" >> .env
            echo "APP_ENV=production" >> .env
            echo "APP_KEY=${{secrets.APP_KEY}}" >> .env
            echo "APP_DEBUG=false" >> .env

            echo "APP_URL=${{secrets.APP_URL}}" >> .env

            LOG_CHANNEL=stack

            echo "DB_CONNECTION=pgsql" >> .env
            echo "DB_HOST=127.0.0.1" >> .env
            echo "DB_PORT=5432" >> .env
            echo "DB_DATABASE=\"${{secrets.DB_DATABASE}}\"" >> .env
            echo "DB_USERNAME=\"${{secrets.DB_USERNAME}}\"" >> .env
            echo "DB_PASSWORD=\"${{secrets.DB_PASSWORD}}\"" >> .env

            BROADCAST_DRIVER=log
            CACHE_DRIVER=redis
            QUEUE_CONNECTION=sync
            SESSION_DRIVER=redis
            SESSION_LIFETIME=120

            REDIS_HOST=127.0.0.1
            REDIS_PASSWORD=null
            REDIS_PORT=6379

            AWS_ACCESS_KEY_ID=
            AWS_SECRET_ACCESS_KEY=
            AWS_DEFAULT_REGION=us-east-1
            AWS_BUCKET=

            PUSHER_APP_ID=
            PUSHER_APP_KEY=
            PUSHER_APP_SECRET=
            PUSHER_APP_CLUSTER=mt1

            MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
            MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

            SENDPORTAL_THROTTLE_MIDDLEWARE=60,1
            SENDPORTAL_REGISTER=false
            SENDPORTAL_PASSWORD_RESET=true


      - name: Remove .git
        run: rm -rf .git

      - name: Write SSH keys
        run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{secrets.SSH_HOST}} > ~/.ssh/known_hosts


      - name: Down  App
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{secrets.WORK_DIR}}
            php artisan down

      - name: ðŸ“‚ Deploy with rsync
        run: rsync -rav --delete ./  ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:/tmp/pixelfed   #${{secrets.WORK_DIR}}

      - name: Restart Apps
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cp -TRv /tmp/pixelfed/ ${{secrets.WORK_DIR}}/
            sudo chmod 777 -R ${{secrets.WORK_DIR}}
            sudo chown www-data:www-data -R ${{secrets.WORK_DIR}}
            cd ${{secrets.WORK_DIR}}
            php artisan migrate --force
            php artisan storage:link
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize
            php artisan up
